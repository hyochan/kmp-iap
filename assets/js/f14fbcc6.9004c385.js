"use strict";(self.webpackChunkkmp_iap_docs=self.webpackChunkkmp_iap_docs||[]).push([[7756],{8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(6540);const a={},s=r.createContext(a);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(s.Provider,{value:n},e.children)}},9486:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var r=i(4848),a=i(8453);const s={title:"Comprehensive API Enhancements & OpenIAP Compliance in KMP-IAP v1.0.0-beta",description:"Complete platform parity with enhanced Android/iOS fields, OpenIAP specification compliance, unified API structure, and improved type safety",slug:"comprehensive-api-enhancements",authors:[{name:"KMP-IAP Team",title:"Maintainer",url:"https://github.com/hyochan/kmp-iap",image_url:"https://github.com/hyochan.png"}],tags:["android","ios","api-enhancement","naming-conventions","purchase-types","storekit","google-play-billing","openiap","specification","api-standardization","type-safety","cross-platform","standards-compliance"],hide_table_of_contents:!1,date:new Date("2025-08-18T00:00:00.000Z")},t="Comprehensive API Enhancements & OpenIAP Compliance in KMP-IAP v1.0.0-beta",l={permalink:"/kmp-iap/blog/comprehensive-api-enhancements",editUrl:"https://github.com/hyochan/kmp-iap/tree/main/docs/blog/2025-08-18-comprehensive-api-enhancements.md",source:"@site/blog/2025-08-18-comprehensive-api-enhancements.md",title:"Comprehensive API Enhancements & OpenIAP Compliance in KMP-IAP v1.0.0-beta",description:"Complete platform parity with enhanced Android/iOS fields, OpenIAP specification compliance, unified API structure, and improved type safety",date:"2025-08-18T00:00:00.000Z",formattedDate:"August 18, 2025",tags:[{label:"android",permalink:"/kmp-iap/blog/tags/android"},{label:"ios",permalink:"/kmp-iap/blog/tags/ios"},{label:"api-enhancement",permalink:"/kmp-iap/blog/tags/api-enhancement"},{label:"naming-conventions",permalink:"/kmp-iap/blog/tags/naming-conventions"},{label:"purchase-types",permalink:"/kmp-iap/blog/tags/purchase-types"},{label:"storekit",permalink:"/kmp-iap/blog/tags/storekit"},{label:"google-play-billing",permalink:"/kmp-iap/blog/tags/google-play-billing"},{label:"openiap",permalink:"/kmp-iap/blog/tags/openiap"},{label:"specification",permalink:"/kmp-iap/blog/tags/specification"},{label:"api-standardization",permalink:"/kmp-iap/blog/tags/api-standardization"},{label:"type-safety",permalink:"/kmp-iap/blog/tags/type-safety"},{label:"cross-platform",permalink:"/kmp-iap/blog/tags/cross-platform"},{label:"standards-compliance",permalink:"/kmp-iap/blog/tags/standards-compliance"}],readingTime:10.75,hasTruncateMarker:!0,authors:[{name:"KMP-IAP Team",title:"Maintainer",url:"https://github.com/hyochan/kmp-iap",image_url:"https://github.com/hyochan.png",imageURL:"https://github.com/hyochan.png"}],frontMatter:{title:"Comprehensive API Enhancements & OpenIAP Compliance in KMP-IAP v1.0.0-beta",description:"Complete platform parity with enhanced Android/iOS fields, OpenIAP specification compliance, unified API structure, and improved type safety",slug:"comprehensive-api-enhancements",authors:[{name:"KMP-IAP Team",title:"Maintainer",url:"https://github.com/hyochan/kmp-iap",image_url:"https://github.com/hyochan.png",imageURL:"https://github.com/hyochan.png"}],tags:["android","ios","api-enhancement","naming-conventions","purchase-types","storekit","google-play-billing","openiap","specification","api-standardization","type-safety","cross-platform","standards-compliance"],hide_table_of_contents:!1,date:"2025-08-18T00:00:00.000Z"},unlisted:!1,prevItem:{title:"v1.0.0-rc - Simplified API Design",permalink:"/kmp-iap/blog/2025/08/20/rc1-simplified-api"},nextItem:{title:"Initial Release - StoreKit 2 and Google Play Billing Library Support",permalink:"/kmp-iap/blog/initial-release"}},d={authorsImageUrls:[void 0]},o=[{value:"\ud83d\udce2 OpenIAP Specification: The New Standard",id:"-openiap-specification-the-new-standard",level:2},{value:"\ud83d\ude80 What&#39;s New",id:"-whats-new",level:2},{value:"Enhanced Android Product Support",id:"enhanced-android-product-support",level:3},{value:"Product Type Fields",id:"product-type-fields",level:4},{value:"One-Time Purchase Details",id:"one-time-purchase-details",level:4},{value:"Enhanced iOS Transaction Support",id:"enhanced-ios-transaction-support",level:3},{value:"Core iOS Fields (Already Supported)",id:"core-ios-fields-already-supported",level:4},{value:"Enhanced iOS Fields for Future StoreKit 2 Support",id:"enhanced-ios-fields-for-future-storekit-2-support",level:4},{value:"Enhanced Purchase Type Support",id:"enhanced-purchase-type-support",level:3},{value:"New Android Purchase Fields",id:"new-android-purchase-fields",level:4},{value:"Enhanced Error Handling",id:"enhanced-error-handling",level:4},{value:"\ud83c\udfaf Complete Type System Overhaul",id:"-complete-type-system-overhaul",level:2},{value:"OpenIAP-Compliant Base Types",id:"openiap-compliant-base-types",level:3},{value:"Platform-Specific Implementation Types",id:"platform-specific-implementation-types",level:3},{value:"\ud83d\udcd0 Improved Naming Conventions",id:"-improved-naming-conventions",level:2},{value:"Consistent Platform Suffixes",id:"consistent-platform-suffixes",level:3},{value:"Type Name Changes",id:"type-name-changes",level:3},{value:"ID Naming Consistency",id:"id-naming-consistency",level:3},{value:"IAP Acronym Usage",id:"iap-acronym-usage",level:3},{value:"\ud83d\udee0 Platform API Mapping",id:"-platform-api-mapping",level:2},{value:"Android Product Mapping",id:"android-product-mapping",level:3},{value:"Android Purchase Mapping",id:"android-purchase-mapping",level:3},{value:"iOS Transaction Support (Current + Future)",id:"ios-transaction-support-current--future",level:3},{value:"\ud83d\udcf1 Usage Examples",id:"-usage-examples",level:2},{value:"Enhanced Android Product Usage",id:"enhanced-android-product-usage",level:3},{value:"Enhanced Purchase Handling",id:"enhanced-purchase-handling",level:3},{value:"Enhanced Error Handling",id:"enhanced-error-handling-1",level:3},{value:"\ud83d\udd04 Migration Guide",id:"-migration-guide",level:2},{value:"Unified Purchase Request Structure",id:"unified-purchase-request-structure",level:3},{value:"Type Names (Automatic via Type Aliases)",id:"type-names-automatic-via-type-aliases",level:3},{value:"New Optional Fields",id:"new-optional-fields",level:3},{value:"Unified Purchase Token Access",id:"unified-purchase-token-access",level:3},{value:"\ud83c\udfaf Why These Changes Matter",id:"-why-these-changes-matter",level:2},{value:"OpenIAP Standards Compliance",id:"openiap-standards-compliance",level:3},{value:"Complete Platform Parity",id:"complete-platform-parity",level:3},{value:"Better Developer Experience",id:"better-developer-experience",level:3},{value:"Improved App Quality",id:"improved-app-quality",level:3},{value:"Future-Proof",id:"future-proof",level:3},{value:"\ud83d\udcda Complete API Reference",id:"-complete-api-reference",level:2},{value:"Product Type Fields",id:"product-type-fields-1",level:3},{value:"Purchase Type Fields",id:"purchase-type-fields",level:3},{value:"Error Type Fields",id:"error-type-fields",level:3},{value:"\ud83d\ude80 Get Started",id:"-get-started",level:2},{value:"Documentation Links",id:"documentation-links",level:3},{value:"\ud83c\udf89 What&#39;s Next",id:"-whats-next",level:2},{value:"OpenIAP Ecosystem Integration",id:"openiap-ecosystem-integration",level:3},{value:"Enhanced Standards Compliance",id:"enhanced-standards-compliance",level:3},{value:"Platform Extensions",id:"platform-extensions",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["We're thrilled to announce the most comprehensive update to KMP-IAP yet! Version 1.0.0-beta brings complete platform parity, ",(0,r.jsx)(n.strong,{children:"100% compliance with the OpenIAP specification"}),", improved naming conventions, and extensive field additions for both Android and iOS platforms."]}),"\n",(0,r.jsx)(n.h2,{id:"-openiap-specification-the-new-standard",children:"\ud83d\udce2 OpenIAP Specification: The New Standard"}),"\n",(0,r.jsxs)(n.p,{children:["KMP-IAP v1.0.0-beta achieves ",(0,r.jsx)(n.strong,{children:"100% compliance"})," with the ",(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP specification"}),", providing a standardized approach to in-app purchases across different platforms and libraries. By adopting this specification, KMP-IAP now offers:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standardized Types"}),": Consistent data structures across platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unified API"}),": Common interface patterns for all IAP operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-Platform Compatibility"}),": Seamless integration with other OpenIAP-compliant libraries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Future-Proof Architecture"}),": Ready for emerging platforms and specifications"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"openiap.dev"})," to learn more about the specification."]}),"\n",(0,r.jsx)(n.h2,{id:"-whats-new",children:"\ud83d\ude80 What's New"}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-android-product-support",children:"Enhanced Android Product Support"}),"\n",(0,r.jsxs)(n.p,{children:["Complete Google Play Billing ",(0,r.jsx)(n.code,{children:"ProductDetails"})," API parity with new fields:"]}),"\n",(0,r.jsx)(n.h4,{id:"product-type-fields",children:"Product Type Fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"typeAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"}),' - Product type ("inapp" or "subs") from ',(0,r.jsx)(n.code,{children:"productDetails.productType"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"nameAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Product display name from ",(0,r.jsx)(n.code,{children:"productDetails.name"})," (different from title)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"displayPriceAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Formatted display price ready for UI"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"one-time-purchase-details",children:"One-Time Purchase Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"oneTimePurchaseOfferDetails"})}),": ",(0,r.jsx)(n.code,{children:"OneTimePurchaseOfferDetails?"})," - Complete pricing information:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'data class OneTimePurchaseOfferDetails(\n    val priceCurrencyCode: String,     // ISO 4217 currency code (e.g., "USD")\n    val formattedPrice: String,        // Human-readable price (e.g., "$0.99")\n    val priceAmountMicros: String      // Price in micros (e.g., "990000")\n)\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-ios-transaction-support",children:"Enhanced iOS Transaction Support"}),"\n",(0,r.jsx)(n.p,{children:"Following StoreKit 2 Transaction API with comprehensive field mapping for iOS 15.0+:"}),"\n",(0,r.jsx)(n.h4,{id:"core-ios-fields-already-supported",children:"Core iOS Fields (Already Supported)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"quantityIOS"}),": Purchase quantity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"originalTransactionDateIOS"}),": Original purchase date"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"originalTransactionIdIOS"}),": Original transaction identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"appBundleIdIOS"}),": App bundle identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"productTypeIOS"}),": Product type (consumable, non-consumable, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"subscriptionGroupIdIOS"}),": Subscription group identifier"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"enhanced-ios-fields-for-future-storekit-2-support",children:"Enhanced iOS Fields for Future StoreKit 2 Support"}),"\n",(0,r.jsx)(n.p,{children:"When StoreKit 2 support is added, these fields will be available:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"signedDateIOS"}),": Transaction signing date"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deviceVerificationIOS"}),": Device verification data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deviceVerificationNonceIOS"}),": Device verification nonce"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offerIdIOS"}),": Promotional offer identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offerTypeIOS"}),": Offer type (introductory, promotional, code)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"subscriptionPeriodIOS"}),": Subscription period unit"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"environmentIOS"}),": Store environment (Sandbox/Production) - iOS 16.0+"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"storefrontCountryCodeIOS"}),": Storefront country code - iOS 17.0+"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reasonIOS"}),": Transaction reason - iOS 17.0+"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-purchase-type-support",children:"Enhanced Purchase Type Support"}),"\n",(0,r.jsx)(n.p,{children:"Comprehensive purchase data capture with new Android fields:"}),"\n",(0,r.jsx)(n.h4,{id:"new-android-purchase-fields",children:"New Android Purchase Fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"dataAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Original JSON data from purchase"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"obfuscatedAccountIdAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Account identifier for purchase attribution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"obfuscatedProfileIdAndroid"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Profile identifier for user segmentation"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"enhanced-error-handling",children:"Enhanced Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"subResponseCode"})}),": ",(0,r.jsx)(n.code,{children:"Int?"})," - Android billing v8.0.0+ sub-response code for detailed error info"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"subResponseMessage"})}),": ",(0,r.jsx)(n.code,{children:"String?"})," - Human-readable message for sub-response codes"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// Example: Enhanced error handling\ntry {\n    val purchase = kmpIapInstance.requestPurchase(request)\n} catch (error: PurchaseError) {\n    when (error.subResponseCode) {\n        1 -> println("Payment declined: ${error.subResponseMessage}")\n        // Handle specific billing errors\n        else -> println("General error: ${error.message}")\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-complete-type-system-overhaul",children:"\ud83c\udfaf Complete Type System Overhaul"}),"\n",(0,r.jsx)(n.h3,{id:"openiap-compliant-base-types",children:"OpenIAP-Compliant Base Types"}),"\n",(0,r.jsx)(n.p,{children:"Following the OpenIAP specification, all types now implement standardized interfaces:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// ProductCommon interface - OpenIAP base specification\ninterface ProductCommon {\n    val id: String              // Unified product identifier\n    val title: String           // Product title\n    val description: String     // Product description\n    val type: ProductType       // "inapp" or "subs"\n    val displayName: String?    // Optional display name\n    val displayPrice: String    // Formatted price for display\n    val currency: String        // ISO currency code\n    val price: Double?          // Numeric price value\n    val debugDescription: String?\n    val platform: String?       // Platform identifier\n}\n\n// PurchaseCommon interface - OpenIAP base specification\ninterface PurchaseCommon {\n    val id: String              // Transaction identifier\n    val productId: String       // Product that was purchased\n    val ids: List<String>?      // Multiple product IDs (Android)\n    val transactionId: String?  // @deprecated - use id instead\n    val transactionDate: Double // Unix timestamp\n    val transactionReceipt: String\n    val purchaseToken: String?  // Unified token field\n    val platform: String?\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"platform-specific-implementation-types",children:"Platform-Specific Implementation Types"}),"\n",(0,r.jsx)(n.p,{children:"Following OpenIAP naming conventions with proper platform suffixes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// iOS Product (ProductIOS)\ndata class ProductIOS(\n    // ProductCommon fields\n    override val id: String,\n    override val title: String,\n    // ... other base fields\n\n    // iOS-specific fields with IOS suffix\n    val displayNameIOS: String,\n    val isFamilyShareableIOS: Boolean,\n    val jsonRepresentationIOS: String,\n    val subscriptionInfoIOS: SubscriptionInfoIOS? = null,\n\n    // Backward compatibility (deprecated)\n    @Deprecated("Use displayNameIOS") val displayName: String? = null,\n    override val platform: String = "ios"\n) : ProductCommon\n\n// Android Product (ProductAndroid)\ndata class ProductAndroid(\n    // ProductCommon fields\n    override val id: String,\n    override val title: String,\n    // ... other base fields\n\n    // Android-specific fields with Android suffix\n    val nameAndroid: String,\n    val oneTimePurchaseOfferDetailsAndroid: ProductAndroidOneTimePurchaseOfferDetail? = null,\n    val subscriptionOfferDetailsAndroid: List<ProductSubscriptionAndroidOfferDetail>? = null,\n\n    // Backward compatibility (deprecated)\n    @Deprecated("Use nameAndroid") val name: String? = null,\n    override val platform: String = "android"\n) : ProductCommon\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-improved-naming-conventions",children:"\ud83d\udcd0 Improved Naming Conventions"}),"\n",(0,r.jsx)(n.h3,{id:"consistent-platform-suffixes",children:"Consistent Platform Suffixes"}),"\n",(0,r.jsx)(n.p,{children:"Following OpenIAP and our internal CLAUDE.md guidelines:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// \u2705 CORRECT: Platform suffix at the end\nval quantityIOS: Int\nval environmentIOS: String\nval appBundleIdIOS: String\nval purchaseTokenAndroid: String\nval packageNameAndroid: String\n\n// \u274c INCORRECT: Platform prefix\nval iosQuantity: Int\nval androidPurchaseToken: String\n"})}),"\n",(0,r.jsx)(n.h3,{id:"type-name-changes",children:"Type Name Changes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Old Name"}),(0,r.jsx)(n.th,{children:"New Name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IosTransactionState"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"TransactionStateIOS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IosSubscriptionPeriodUnit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SubscriptionPeriodUnitIOS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IosDiscountPaymentMode"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DiscountPaymentModeIOS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IosDiscountType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DiscountTypeIOS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SubscriptionIosPeriod"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SubscriptionPeriodIOS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IapPlatform"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IapPlatform"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"id-naming-consistency",children:"ID Naming Consistency"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// \u2705 CORRECT: Use "Id" not "ID"\nval productId: String\nval transactionId: String\nval subscriptionGroupId: String\nval orderIdAndroid: String\nval originalTransactionIdIOS: String\n\n// \u274c INCORRECT: Using "ID"\nval productID: String\nval transactionID: String\n'})}),"\n",(0,r.jsx)(n.h3,{id:"iap-acronym-usage",children:"IAP Acronym Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// \u2705 CORRECT: IAP as final word\nclass KmpIAP\nval kmpIAP = KmpIAP()\n\n// \u2705 CORRECT: Iap when followed by other words\nval kmpIapInstance: KmpIAP\nenum class IapPlatform { IOS, ANDROID }\n\n// \u274c INCORRECT: Inconsistent usage\nval kmpIAPInstance: KmpIAP\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-platform-api-mapping",children:"\ud83d\udee0 Platform API Mapping"}),"\n",(0,r.jsx)(n.h3,{id:"android-product-mapping",children:"Android Product Mapping"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// Native Android ProductDetails mapping\nmapOf(\n    "id" to productDetails.productId,               // -> id\n    "title" to productDetails.title,                // -> title\n    "description" to productDetails.description,    // -> description\n    "type" to productDetails.productType,          // -> typeAndroid\n    "displayName" to productDetails.name,           // -> nameAndroid\n    "displayPrice" to displayPrice,                 // -> displayPriceAndroid\n    "oneTimePurchaseOfferDetails" to offerDetails,  // -> oneTimePurchaseOfferDetails\n    "subscriptionOfferDetails" to subscriptions     // -> subscriptionOfferDetails\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"android-purchase-mapping",children:"Android Purchase Mapping"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// Native Android Purchase mapping\nval purchaseData = mapOf(\n    "id" to purchase.orderId,                       // -> id\n    "productId" to purchase.products.first(),       // -> productId\n    "purchaseToken" to purchase.purchaseToken,      // -> purchaseToken\n    "dataAndroid" to purchase.originalJson,         // -> dataAndroid \u2728 NEW\n    "signatureAndroid" to purchase.signature,       // -> signatureAndroid\n    "obfuscatedAccountId" to accountId,             // -> obfuscatedAccountIdAndroid \u2728 NEW\n    "obfuscatedProfileId" to profileId              // -> obfuscatedProfileIdAndroid \u2728 NEW\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"ios-transaction-support-current--future",children:"iOS Transaction Support (Current + Future)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-swift",children:'// Current StoreKit 1 support + Future StoreKit 2 fields\nlet transactionData = [\n    "id": transaction.id,                           // -> id\n    "productId": transaction.productID,             // -> productId\n    "quantityIOS": transaction.purchasedQuantity,   // -> quantityIOS\n\n    // Future StoreKit 2 fields\n    "signedDateIOS": transaction.signedDate,        // -> signedDateIOS\n    "deviceVerificationIOS": deviceVerification,    // -> deviceVerificationIOS\n    "offerIdIOS": transaction.offerID,             // -> offerIdIOS\n    "environmentIOS": transaction.environment       // -> environmentIOS (iOS 16.0+)\n]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-usage-examples",children:"\ud83d\udcf1 Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-android-product-usage",children:"Enhanced Android Product Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val products = kmpIapInstance.requestProducts(\n    ProductRequest(listOf("premium_upgrade"), ProductType.INAPP)\n)\n\nproducts.forEach { product ->\n    // Use enhanced Android fields\n    val displayName = product.nameAndroid ?: product.title\n    val displayPrice = product.displayPriceAndroid ?: product.price\n\n    // Check product type\n    when (product.typeAndroid) {\n        "inapp" -> println("One-time purchase: $displayName")\n        "subs" -> println("Subscription: $displayName")\n    }\n\n    // Access detailed pricing for one-time purchases\n    product.oneTimePurchaseOfferDetails?.let { offer ->\n        println("Price: ${offer.formattedPrice}")\n        println("Currency: ${offer.priceCurrencyCode}")\n\n        // Convert micros to decimal\n        val actualPrice = offer.priceAmountMicros.toLong() / 1_000_000.0\n        println("Decimal price: $actualPrice")\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-purchase-handling",children:"Enhanced Purchase Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// Listen for purchase updates with enhanced data\nkmpIapInstance.purchaseUpdatedListener.collect { purchase ->\n    // Validate receipt with your backend\n    val receiptData = PurchaseReceiptData(\n        purchaseToken = purchase.purchaseToken,\n        originalJson = purchase.dataAndroid,  // \u2728 NEW: Full purchase data\n        signature = purchase.signatureAndroid,\n        accountId = purchase.obfuscatedAccountIdAndroid,  // \u2728 NEW: User attribution\n        profileId = purchase.obfuscatedProfileIdAndroid   // \u2728 NEW: Profile tracking\n    )\n\n    val isValid = validateReceiptOnServer(receiptData)\n\n    if (isValid) {\n        grantEntitlement(purchase.productId)\n        kmpIapInstance.finishTransaction(purchase, isConsumable = true)\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-error-handling-1",children:"Enhanced Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'kmpIapInstance.purchaseErrorListener.collect { error ->\n    when (error.code) {\n        "E_USER_CANCELLED" -> showUserCancelledMessage()\n        "E_PAYMENT_DECLINED" -> {\n            // Enhanced Android error handling\n            when (error.subResponseCode) {\n                1 -> showInsufficientFundsMessage(error.subResponseMessage)\n                else -> showGenericPaymentError(error.message)\n            }\n        }\n        else -> showGenericError(error.message)\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-migration-guide",children:"\ud83d\udd04 Migration Guide"}),"\n",(0,r.jsx)(n.h3,{id:"unified-purchase-request-structure",children:"Unified Purchase Request Structure"}),"\n",(0,r.jsx)(n.p,{children:"Replace old request structures with OpenIAP-compliant ones:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// \u274c OLD: UnifiedPurchaseRequest (deprecated)\nval purchase = kmpIapInstance.requestPurchase(\n    UnifiedPurchaseRequest(\n        sku = "premium",\n        quantity = 1\n    )\n)\n\n// \u2705 NEW: OpenIAP-compliant RequestPurchaseProps\nval purchase = kmpIapInstance.requestPurchase(\n    RequestPurchaseProps(\n        ios = RequestPurchaseIosProps(\n            sku = "premium",\n            quantity = 1\n        ),\n        android = RequestPurchaseAndroidProps(\n            skus = listOf("premium")\n        )\n    )\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"type-names-automatic-via-type-aliases",children:"Type Names (Automatic via Type Aliases)"}),"\n",(0,r.jsx)(n.p,{children:"The library provides type aliases for renamed types, so existing code continues to work:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// These imports automatically use the new names\nimport io.github.hyochan.kmpiap.*\n\n// Your existing code works unchanged\nval state: TransactionStateIOS = TransactionStateIOS.PURCHASED\n"})}),"\n",(0,r.jsx)(n.h3,{id:"new-optional-fields",children:"New Optional Fields"}),"\n",(0,r.jsxs)(n.p,{children:["All new fields are optional (",(0,r.jsx)(n.code,{children:"nullable"}),"), so no migration is required:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// Existing code works unchanged\nval purchase = kmpIapInstance.requestPurchase(request)\n\n// New fields available when needed\nval accountId = purchase.obfuscatedAccountIdAndroid  // null if not available\nval originalData = purchase.dataAndroid              // null if not available\n"})}),"\n",(0,r.jsx)(n.h3,{id:"unified-purchase-token-access",children:"Unified Purchase Token Access"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// \u2705 NEW: Unified purchaseToken field\nval token = purchase.purchaseToken\n\n// \u2705 FALLBACK: Platform-specific deprecated fields still work\nval tokenFallback = (purchase as? PurchaseAndroid)?.purchaseTokenAndroid\n    ?: (purchase as? PurchaseIOS)?.jwsRepresentationIOS\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-why-these-changes-matter",children:"\ud83c\udfaf Why These Changes Matter"}),"\n",(0,r.jsx)(n.h3,{id:"openiap-standards-compliance",children:"OpenIAP Standards Compliance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Industry Standard"}),": Follows the OpenIAP specification for cross-library compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interoperability"}),": Libraries can work together seamlessly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Community Standards"}),": Shared best practices across the ecosystem"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Innovation"}),": Focus on features, not API design"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"complete-platform-parity",children:"Complete Platform Parity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Full Google Play Billing API coverage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Comprehensive StoreKit field mapping (current + future StoreKit 2)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistent"}),": Unified API across platforms"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"better-developer-experience",children:"Better Developer Experience"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Safety"}),": All fields properly typed with clear nullability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistent Naming"}),": Platform suffixes make code more readable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Documentation"}),": Every field documented with usage examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Easier Migration"}),": Move between OpenIAP-compliant libraries seamlessly"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"improved-app-quality",children:"Improved App Quality"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better User Experience"}),": Access to localized names and formatted prices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Analytics"}),": User attribution with account/profile IDs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Robust Error Handling"}),": Detailed error codes for better UX"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reduced Bugs"}),": Standardized error codes and handling"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"future-proof",children:"Future-Proof"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"StoreKit 2 Ready"}),": Field structure prepared for StoreKit 2 migration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extensible"}),": Easy to add new platform-specific fields"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backward Compatible"}),": Existing code continues to work"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ready for New Platforms"}),": Architecture supports emerging platforms"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-complete-api-reference",children:"\ud83d\udcda Complete API Reference"}),"\n",(0,r.jsx)(n.h3,{id:"product-type-fields-1",children:"Product Type Fields"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'data class Product(\n    // Core fields\n    val id: String,\n    val title: String,\n    val description: String,\n    val price: String,\n    val priceAmount: Double,\n    val currency: String,\n\n    // iOS-specific fields\n    val displayName: String? = null,\n    val isFamilyShareable: Boolean = false,\n    val discounts: List<Discount>? = null,\n\n    // Android-specific fields \u2728\n    val nameAndroid: String? = null,              // Product display name\n    val typeAndroid: String? = null,              // "inapp" or "subs"\n    val displayPriceAndroid: String? = null,      // Formatted price\n    val oneTimePurchaseOfferDetails: OneTimePurchaseOfferDetails? = null,\n    val subscriptionOfferDetails: List<OfferDetail>? = null,\n\n    val platform: IapPlatform\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-type-fields",children:"Purchase Type Fields"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class Purchase(\n    // Core fields\n    val id: String,\n    val productId: String,\n    val transactionDate: Double,\n    val transactionReceipt: String,\n    val purchaseToken: String? = null,\n\n    // iOS-specific fields\n    val quantityIOS: Int? = null,\n    val originalTransactionDateIOS: Double? = null,\n    val originalTransactionIdIOS: String? = null,\n    // ... other iOS fields\n\n    // Android-specific fields \u2728\n    val purchaseStateAndroid: Int? = null,\n    val signatureAndroid: String? = null,\n    val autoRenewingAndroid: Boolean? = null,\n    val acknowledgedAndroid: Boolean? = null,\n    val dataAndroid: String? = null,                    // \u2728 NEW\n    val obfuscatedAccountIdAndroid: String? = null,     // \u2728 NEW\n    val obfuscatedProfileIdAndroid: String? = null,     // \u2728 NEW\n\n    val platform: IapPlatform\n)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-type-fields",children:"Error Type Fields"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"class PurchaseError(\n    val code: String,\n    override val message: String,\n    val productId: String? = null,\n    val responseCode: Int? = null,\n    val debugMessage: String? = null,\n    val platform: IapPlatform? = null,\n    val subResponseCode: Int? = null,        // \u2728 NEW: Android v8.0.0+\n    val subResponseMessage: String? = null   // \u2728 NEW: Detailed error message\n) : Exception(message)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-get-started",children:"\ud83d\ude80 Get Started"}),"\n",(0,r.jsx)(n.p,{children:"Update to KMP-IAP v1.0.0-beta today:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'implementation("io.github.hyochan:kmp-iap:1.0.0-beta.14")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"documentation-links",children:"Documentation Links"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Specification"})})," - Learn about the standard"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://hyochan.github.io/kmp-iap",children:"Complete API Documentation"})})," - Complete API reference"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-whats-next",children:"\ud83c\udf89 What's Next"}),"\n",(0,r.jsx)(n.h3,{id:"openiap-ecosystem-integration",children:"OpenIAP Ecosystem Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cross-library compatibility testing"}),"\n",(0,r.jsx)(n.li,{children:"Shared validation utilities"}),"\n",(0,r.jsx)(n.li,{children:"Common testing frameworks"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-standards-compliance",children:"Enhanced Standards Compliance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Receipt validation standardization"}),"\n",(0,r.jsx)(n.li,{children:"Promotional offers specification"}),"\n",(0,r.jsx)(n.li,{children:"Subscription management patterns"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"platform-extensions",children:"Platform Extensions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"StoreKit 2 Implementation"}),": Complete iOS StoreKit 2 support with all enhanced fields"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Advanced Subscription Management"}),": Enhanced subscription lifecycle APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Promotional Offers"}),": Comprehensive promotional offer handling for both platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web IAP Integration"}),": Support for web platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desktop Platform Support"}),": Native desktop IAP integration"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["Have questions or feedback? Join the discussion on ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/kmp-iap",children:"GitHub"})," or contribute to the project!"]}),"\n",(0,r.jsxs)(n.p,{children:["For new feature proposals, discuss at ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/openiap.dev/discussions",children:"OpenIAP Discussions"})," to ensure alignment with standards."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This update represents months of work to provide the most comprehensive and standards-compliant cross-platform IAP solution available. Thank you to all contributors and users who made this possible!"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);