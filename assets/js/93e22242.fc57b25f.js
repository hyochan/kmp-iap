"use strict";(self.webpackChunkkmp_iap_docs=self.webpackChunkkmp_iap_docs||[]).push([[8872],{571:(e,n,r)=>{r.d(n,{A:()=>o});var t=r(6540),s=r(4848);function i({className:e="adfit",style:n,unit:r,height:i,width:o}){return(0,t.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=n.querySelectorAll(".kakao_ad_area"),s=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),s.forEach(e=>e.remove());const a=document.createElement("ins"),d=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",d.async=!0,d.type="text/javascript",d.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",i.toString()),a.setAttribute("data-ad-unit",r),n.appendChild(a),n.appendChild(d)},100);return()=>clearTimeout(n)},[e,r,i,o]),(0,s.jsx)("div",{style:n,children:(0,s.jsx)("div",{className:e})})}function o(){return(0,s.jsx)(i,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,style:{marginBottom:20,display:"flex",justifyContent:"center"}})}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},8494:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var t=r(4848),s=r(8453),i=r(571);const o={title:"Android Setup",sidebar_label:"Android Setup",sidebar_position:3},a="Android Setup",d={id:"getting-started/android-setup",title:"Android Setup",description:"For complete Android setup instructions including Google Play Console configuration, app setup, and testing guidelines, please visit:",source:"@site/docs/getting-started/android-setup.md",sourceDirName:"getting-started",slug:"/getting-started/android-setup",permalink:"/kmp-iap/docs/getting-started/android-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/hyochan/kmp-iap/tree/main/docs/docs/getting-started/android-setup.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Android Setup",sidebar_label:"Android Setup",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"iOS Setup",permalink:"/kmp-iap/docs/getting-started/ios-setup"},next:{title:"Purchases",permalink:"/kmp-iap/docs/guides/purchases"}},c={},u=[{value:"Code Implementation",id:"code-implementation",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Android-specific Features",id:"android-specific-features",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Next Steps",id:"next-steps",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"android-setup",children:"Android Setup"}),"\n",(0,t.jsx)(i.A,{}),"\n",(0,t.jsx)(n.p,{children:"For complete Android setup instructions including Google Play Console configuration, app setup, and testing guidelines, please visit:"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://openiap.dev/docs/android-setup",children:"Android Setup Guide - openiap.dev"})})]}),"\n",(0,t.jsx)(n.p,{children:"The guide covers:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Google Play Console configuration"}),"\n",(0,t.jsx)(n.li,{children:"App bundle setup and signing"}),"\n",(0,t.jsx)(n.li,{children:"Testing with internal testing tracks"}),"\n",(0,t.jsx)(n.li,{children:"Common troubleshooting steps"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,t.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.KmpIAP\nimport io.github.hyochan.kmpiap.types.*\nimport kotlinx.coroutines.*\n\nclass IAPManager {\n    private val kmpIAP = KmpIAP()\n    private val scope = CoroutineScope(Dispatchers.Main)\n    \n    fun initialize() {\n        scope.launch {\n            try {\n                // Initialize connection\n                kmpIapInstance.initConnection()\n                println("Billing client connected")\n\n                // Set up purchase listeners\n                setupPurchaseListeners()\n\n                // Load products\n                loadProducts()\n            } catch (e: Exception) {\n                println("Failed to initialize: ${e.message}")\n            }\n        }\n    }\n    \n    private fun setupPurchaseListeners() {\n        scope.launch {\n            // Listen for purchase updates\n            kmpIAP.purchaseUpdatedListener.collect { purchase ->\n                handlePurchaseUpdate(purchase)\n            }\n        }\n        \n        scope.launch {\n            // Listen for purchase errors\n            kmpIAP.purchaseErrorListener.collect { error ->\n                handlePurchaseError(error)\n            }\n        }\n    }\n    \n    private suspend fun loadProducts() {\n        try {\n            val products = kmpIAP.fetchProducts {\n                skus = listOf("premium_upgrade", "remove_ads")\n                type = ProductQueryType.InApp\n            }\n            println("Found ${products.size} products")\n        } catch (e: Exception) {\n            println("Failed to load products: ${e.message}")\n        }\n    }\n    \n    private suspend fun handlePurchaseUpdate(purchase: Purchase) {\n        // Verify purchase with your backend\n        val isValid = verifyPurchaseWithBackend(purchase)\n        \n        if (isValid) {\n            // Grant entitlement\n            grantEntitlement(purchase.productId)\n            \n            // Finish transaction\n            kmpIapInstance.finishTransaction(\n                purchase.toPurchaseInput(),\n                isConsumable = isConsumableProduct(purchase.productId)\n            )\n        }\n    }\n    \n    private fun handlePurchaseError(error: PurchaseError) {\n        when (error.code) {\n            ErrorCode.UserCancelled -> {\n                // User cancelled, no action needed\n            }\n            ErrorCode.AlreadyOwned -> {\n                // Item already owned, restore it\n                restorePurchases()\n            }\n            else -> {\n                // Show error to user\n                showError(error.message)\n            }\n        }\n    }\n    \n    suspend fun purchaseProduct(productId: String) {\n        kmpIAP.requestPurchase {\n            ios {\n                sku = productId\n                quantity = 1\n            }\n            android {\n                skus = listOf(productId)\n            }\n        }\n    }\n    \n    suspend fun restorePurchases() {\n        val purchases = kmpIAP.getAvailablePurchases()\n        purchases.forEach { purchase ->\n            grantEntitlement(purchase.productId)\n        }\n    }\n    \n    private suspend fun verifyPurchaseWithBackend(purchase: Purchase): Boolean {\n        // TODO: Implement your backend verification\n        return true\n    }\n    \n    private fun grantEntitlement(productId: String) {\n        // Grant the appropriate entitlement based on productId\n        when (productId) {\n            "remove_ads" -> UserSettings.adsRemoved = true\n            "premium_upgrade" -> UserSettings.isPremium = true\n            // Handle other products\n        }\n    }\n    \n    private fun isConsumableProduct(productId: String): Boolean {\n        return when (productId) {\n            "coins_100", "coins_500" -> true\n            else -> false\n        }\n    }\n    \n    private fun showError(message: String) {\n        // Show error message to user\n    }\n    \n    fun cleanup() {\n        scope.cancel()\n        runBlocking {\n            kmpIapInstance.endConnection()\n        }\n    }\n}\n\n// Simple user settings example\nobject UserSettings {\n    var adsRemoved: Boolean = false\n    var isPremium: Boolean = false\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"android-specific-features",children:"Android-specific Features"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'// Use obfuscated account IDs for enhanced security\nkmpIAP.requestPurchase {\n    ios {\n        sku = "premium_upgrade"\n        quantity = 1\n    }\n    android {\n        skus = listOf("premium_upgrade")\n        obfuscatedAccountIdAndroid = "user_account_123"\n        obfuscatedProfileIdAndroid = "profile_456"\n    }\n}\n\n// Acknowledge a purchase (for non-consumables)\nkmpIAP.acknowledgePurchaseAndroid(purchase.purchaseToken)\n\n// Consume a purchase (for consumables)\nkmpIAP.consumePurchaseAndroid(purchase.purchaseToken)\n\n// Deep link to subscription management\nkmpIAP.deepLinkToSubscriptions(\n    DeepLinkOptions(sku = "subscription_id")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'scope.launch {\n    kmpIAP.purchaseErrorListener.collect { error ->\n        when (error.code) {\n            ErrorCode.ServiceUnavailable -> {\n                // Google Play services unavailable\n                showDialog("Please update Google Play services")\n            }\n            ErrorCode.BillingUnavailable -> {\n                // Billing API version not supported\n                showDialog("In-app purchases not supported on this device")\n            }\n            ErrorCode.ItemUnavailable -> {\n                // Product not found or not available for purchase\n                showDialog("This item is currently unavailable")\n            }\n            ErrorCode.DeveloperError -> {\n                // Invalid arguments provided to the API\n                println("Developer error: Check product configuration")\n            }\n            else -> {\n                showDialog("Purchase failed: ${error.message}")\n            }\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/getting-started/ios-setup",children:"iOS Setup"})})," - Configure for iOS platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/guides/purchases",children:"Basic Implementation"})})," - Start implementing purchases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/guides/troubleshooting",children:"Troubleshooting"})})," - Common issues and solutions"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["For detailed platform configuration, product setup, and testing instructions, visit the ",(0,t.jsx)(n.a,{href:"https://openiap.dev/docs/android-setup",children:"Android Setup Guide at openiap.dev"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);