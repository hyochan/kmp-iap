"use strict";(self.webpackChunkkmp_iap_docs=self.webpackChunkkmp_iap_docs||[]).push([[6810],{5820:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var r=i(4848),l=i(8453);const o={slug:"1.0.0-rc.4",title:"1.0.0-rc.4 - OpenIAP Monorepo Conversion & Alternative Billing",authors:["hyochan"],tags:["release","openiap","alternative-billing","monorepo","ios","android","storekit","kotlin-multiplatform"],date:new Date("2025-10-20T00:00:00.000Z")},s="1.0.0-rc.4 Release Notes",t={permalink:"/kmp-iap/blog/1.0.0-rc.4",editUrl:"https://github.com/hyochan/kmp-iap/tree/main/docs/blog/2025-10-20-rc4-openiap-conversion.md",source:"@site/blog/2025-10-20-rc4-openiap-conversion.md",title:"1.0.0-rc.4 - OpenIAP Monorepo Conversion & Alternative Billing",description:"KMP-IAP 1.0.0-rc.4 marks a major milestone with the OpenIAP monorepo conversion and introduces Alternative Billing support for both iOS and Android platforms.",date:"2025-10-20T00:00:00.000Z",formattedDate:"October 20, 2025",tags:[{label:"release",permalink:"/kmp-iap/blog/tags/release"},{label:"openiap",permalink:"/kmp-iap/blog/tags/openiap"},{label:"alternative-billing",permalink:"/kmp-iap/blog/tags/alternative-billing"},{label:"monorepo",permalink:"/kmp-iap/blog/tags/monorepo"},{label:"ios",permalink:"/kmp-iap/blog/tags/ios"},{label:"android",permalink:"/kmp-iap/blog/tags/android"},{label:"storekit",permalink:"/kmp-iap/blog/tags/storekit"},{label:"kotlin-multiplatform",permalink:"/kmp-iap/blog/tags/kotlin-multiplatform"}],readingTime:5.205,hasTruncateMarker:!0,authors:[{name:"Hyo",title:"Maintainer of kmp-iap",url:"https://github.com/hyochan",imageURL:"https://github.com/hyochan.png",key:"hyochan"}],frontMatter:{slug:"1.0.0-rc.4",title:"1.0.0-rc.4 - OpenIAP Monorepo Conversion & Alternative Billing",authors:["hyochan"],tags:["release","openiap","alternative-billing","monorepo","ios","android","storekit","kotlin-multiplatform"],date:"2025-10-20T00:00:00.000Z"},unlisted:!1,nextItem:{title:"v1.0.0-rc - Simplified API Design",permalink:"/kmp-iap/blog/2025/08/20/rc1-simplified-api"}},a={authorsImageUrls:[void 0]},c=[{value:"\ud83c\udfaf Major Changes",id:"-major-changes",level:2},{value:"OpenIAP Monorepo Conversion",id:"openiap-monorepo-conversion",level:3},{value:"\ud83d\ude80 New Features",id:"-new-features",level:2},{value:"iOS Alternative Billing (StoreKit External Purchase)",id:"ios-alternative-billing-storekit-external-purchase",level:3},{value:"Android Alternative Billing",id:"android-alternative-billing",level:3},{value:"\ud83c\udfa8 Alternative Billing Demo Screen",id:"-alternative-billing-demo-screen",level:3},{value:"\ud83d\udc1b Bug Fixes &amp; Improvements",id:"-bug-fixes--improvements",level:2},{value:"Serialization Error Fix",id:"serialization-error-fix",level:3},{value:"iOS Subscription Enhancements",id:"ios-subscription-enhancements",level:3},{value:"\u26a0\ufe0f Platform Requirements",id:"\ufe0f-platform-requirements",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"Gradle (Kotlin DSL)",id:"gradle-kotlin-dsl",level:3},{value:"Gradle (Groovy)",id:"gradle-groovy",level:3},{value:"Version Catalog (libs.versions.toml)",id:"version-catalog-libsversionstoml",level:3},{value:"\ud83d\udea8 Important Notes",id:"-important-notes",level:2},{value:"For iOS Developers",id:"for-ios-developers",level:3},{value:"For Android Developers",id:"for-android-developers",level:3},{value:"\ud83d\udcd6 Documentation Updates",id:"-documentation-updates",level:2},{value:"\ud83d\udd17 References",id:"-references",level:2},{value:"\ud83d\ude4f Acknowledgments",id:"-acknowledgments",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["KMP-IAP 1.0.0-rc.4 marks a major milestone with the ",(0,r.jsx)(n.strong,{children:"OpenIAP monorepo conversion"})," and introduces ",(0,r.jsx)(n.strong,{children:"Alternative Billing"})," support for both iOS and Android platforms."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/kmp-iap/releases/tag/1.0.0-rc.4",children:"View the 1.0.0-rc.4 release"})]}),"\n",(0,r.jsx)(n.h2,{id:"-major-changes",children:"\ud83c\udfaf Major Changes"}),"\n",(0,r.jsx)(n.h3,{id:"openiap-monorepo-conversion",children:"OpenIAP Monorepo Conversion"}),"\n",(0,r.jsxs)(n.p,{children:["KMP-IAP now fully integrates with the ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyodotdev/openiap",children:"OpenIAP monorepo"})}),", centralizing all in-app purchase implementations under one standardized specification. This conversion brings:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unified dependency management"})," through ",(0,r.jsx)(n.code,{children:"openiap-versions.json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"100% OpenIAP specification compliance"})," across all platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Centralized version control"})," for iOS, Android, and GraphQL types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simplified maintenance"})," with single source of truth"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Current OpenIAP versions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-apple"}),": 1.2.26 (iOS StoreKit wrapper with external purchase support)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-google"}),": 1.3.2 (Android BillingClient wrapper with alternative billing)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-gql"}),": 1.2.2 (GraphQL type definitions)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All native SDKs are now maintained in the OpenIAP monorepo, ensuring consistent APIs and behavior across platforms."}),"\n",(0,r.jsx)(n.h2,{id:"-new-features",children:"\ud83d\ude80 New Features"}),"\n",(0,r.jsx)(n.h3,{id:"ios-alternative-billing-storekit-external-purchase",children:"iOS Alternative Billing (StoreKit External Purchase)"}),"\n",(0,r.jsx)(n.p,{children:"Three new APIs for managing external purchases on iOS:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#canpresentexternalpurchasenoticeios",children:(0,r.jsx)(n.code,{children:"canPresentExternalPurchaseNoticeIOS()"})})})," - Check if the notice sheet is available (iOS 18.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#presentexternalpurchasenoticesheetios",children:(0,r.jsx)(n.code,{children:"presentExternalPurchaseNoticeSheetIOS()"})})})," - Present a notice before redirecting to external purchase (iOS 18.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#presentexternalpurchaselinkios",children:(0,r.jsx)(n.code,{children:"presentExternalPurchaseLinkIOS(url)"})})})," - Open external purchase link in Safari (iOS 16.0+)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"iOS Configuration Required:"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Info.plist:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    \x3c!-- Countries where external purchases are supported --\x3e\n    <key>SKExternalPurchase</key>\n    <array>\n        <string>kr</string>\n        <string>nl</string>\n        <string>de</string>\n    </array>\n</dict>\n</plist>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Entitlements (iosApp.entitlements):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>com.apple.developer.storekit.external-purchase</key>\n    <true/>\n\n    <key>com.apple.developer.storekit.external-purchase-link</key>\n    <true/>\n</dict>\n</plist>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\n// Redirect user to external purchase website\nval result = kmpIapInstance.presentExternalPurchaseLinkIOS(\n    url = "https://your-site.com/checkout"\n)\n\nif (result.success) {\n    println("User redirected to external website")\n} else {\n    println("Error: ${result.error}")\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"android-alternative-billing",children:"Android Alternative Billing"}),"\n",(0,r.jsx)(n.p,{children:"Three new APIs for Google Play Alternative Billing flow:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#checkalternativebillingavailabilityandroid",children:(0,r.jsx)(n.code,{children:"checkAlternativeBillingAvailabilityAndroid()"})})})," - Check if alternative billing is available for the user"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#showalternativebillingdialogandroid",children:(0,r.jsx)(n.code,{children:"showAlternativeBillingDialogAndroid()"})})})," - Show Google's required information dialog"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#createalternativebillingtokenandroid",children:(0,r.jsx)(n.code,{children:"createAlternativeBillingTokenAndroid()"})})})," - Generate reporting token after successful payment"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration Support:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"import io.github.hyochan.kmpiap.kmpIapInstance\nimport io.github.hyochan.kmpiap.openiap.AlternativeBillingModeAndroid\nimport io.github.hyochan.kmpiap.openiap.InitConnectionConfig\n\n// Initialize with alternative billing mode\nval config = InitConnectionConfig(\n    alternativeBillingModeAndroid = AlternativeBillingModeAndroid.UserChoice\n    // Or: AlternativeBillingModeAndroid.AlternativeOnly\n)\n\nval connected = kmpIapInstance.initConnection(config)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Two Billing Modes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UserChoice"})," - Users choose between Google Play billing (30% fee) or your payment system (lower fee)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AlternativeOnly"})," - Only your payment system is available (Google Play billing disabled)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"User Choice Mode Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\nimport kotlinx.coroutines.flow.collect\n\n// Initialize with user-choice mode\nval config = InitConnectionConfig(\n    alternativeBillingModeAndroid = AlternativeBillingModeAndroid.UserChoice\n)\nkmpIapInstance.initConnection(config)\n\n// Listen for when user selects alternative billing\nscope.launch {\n    kmpIapInstance.userChoiceBillingListener.collect { details ->\n        println("User selected alternative billing")\n        println("Products: ${details.products}")\n\n        // Process payment in your system, then report token to Google\n        processPaymentAndReportToken(details)\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Alternative Only Mode Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// Step 1: Check availability\nval isAvailable = kmpIapInstance.checkAlternativeBillingAvailabilityAndroid()\n\n// Step 2: Show Google's information dialog\nval userAccepted = kmpIapInstance.showAlternativeBillingDialogAndroid()\n\nif (userAccepted) {\n    // Step 3: Process payment in your system, then create token\n    val token = kmpIapInstance.createAlternativeBillingTokenAndroid()\n\n    // Step 4: Report token to Google Play backend within 24 hours\n    reportTokenToGooglePlay(token)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-alternative-billing-demo-screen",children:"\ud83c\udfa8 Alternative Billing Demo Screen"}),"\n",(0,r.jsx)(n.p,{children:"A complete alternative billing demo screen has been added to the example app:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform-specific flows"})," - Demonstrates iOS and Android alternative billing patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Billing mode toggle"})," (Android) - Switch between ",(0,r.jsx)(n.code,{children:"AlternativeOnly"})," and ",(0,r.jsx)(n.code,{children:"UserChoice"})," with auto-reconnect"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External URL input"})," (iOS) - Configure and test external purchase links"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time results"})," - View purchase flow status and responses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step-by-step guidance"})," - Visual flow diagrams for both platforms"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Navigate to ",(0,r.jsx)(n.code,{children:"example/composeApp/src/commonMain/kotlin/dev/hyo/martie/screens/AlternativeBillingScreen.kt"})," to explore the implementation."]}),"\n",(0,r.jsx)(n.h2,{id:"-bug-fixes--improvements",children:"\ud83d\udc1b Bug Fixes & Improvements"}),"\n",(0,r.jsx)(n.h3,{id:"serialization-error-fix",children:"Serialization Error Fix"}),"\n",(0,r.jsxs)(n.p,{children:["Fixed a critical serialization issue in ",(0,r.jsx)(n.code,{children:"AvailablePurchasesScreen"})," where ",(0,r.jsx)(n.code,{children:"PurchaseIOS"})," and ",(0,r.jsx)(n.code,{children:"PurchaseAndroid"})," objects couldn't be serialized directly. Now uses the ",(0,r.jsx)(n.code,{children:"Purchase.toJson()"})," method for proper JSON serialization."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Before:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// This would throw SerializationException\nval jsonString = json.encodeToString(purchase)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"After:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// Uses the built-in toJson() method\nval purchaseMap = purchase.toJson()\nval jsonString = buildJsonString(purchaseMap)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ios-subscription-enhancements",children:"iOS Subscription Enhancements"}),"\n",(0,r.jsxs)(n.p,{children:["Added ",(0,r.jsx)(n.code,{children:"renewalInfoIOS"})," field to ",(0,r.jsx)(n.code,{children:"activeSubscription"})," (openiap-apple 1.2.24+), providing access to subscription renewal information including:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Auto-renew status"}),"\n",(0,r.jsx)(n.li,{children:"Expiration reason"}),"\n",(0,r.jsx)(n.li,{children:"Grace period status"}),"\n",(0,r.jsx)(n.li,{children:"Offer information"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-platform-requirements",children:"\u26a0\ufe0f Platform Requirements"}),"\n",(0,r.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimum Version"}),": iOS 16.0+ for external purchase links, iOS 18.2+ for notice sheet"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"App Store Connect"}),": Must request and receive approval for external purchase entitlements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provisioning Profile"}),": Must include StoreKit external purchase entitlements"]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"StoreKit External Purchase documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Google Play Console"}),": Must be approved for alternative billing program"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token Reporting"}),": Must report tokens to Google within 24 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Integration"}),": Server-side validation and reporting required"]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,r.jsx)(n.h3,{id:"gradle-kotlin-dsl",children:"Gradle (Kotlin DSL)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// shared/build.gradle.kts\nkotlin {\n    sourceSets {\n        commonMain.dependencies {\n            implementation("io.github.hyochan:kmp-iap:1.0.0-rc.4")\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"gradle-groovy",children:"Gradle (Groovy)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"// shared/build.gradle\nkotlin {\n    sourceSets {\n        commonMain {\n            dependencies {\n                implementation 'io.github.hyochan:kmp-iap:1.0.0-rc.4'\n            }\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"version-catalog-libsversionstoml",children:"Version Catalog (libs.versions.toml)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[versions]\nkmp-iap = "1.0.0-rc.4"\n\n[libraries]\nkmp-iap = { module = "io.github.hyochan:kmp-iap", version.ref = "kmp-iap" }\n'})}),"\n",(0,r.jsx)(n.p,{children:"Then sync your Gradle project."}),"\n",(0,r.jsx)(n.h2,{id:"-important-notes",children:"\ud83d\udea8 Important Notes"}),"\n",(0,r.jsx)(n.h3,{id:"for-ios-developers",children:"For iOS Developers"}),"\n",(0,r.jsx)(n.p,{children:"Alternative billing on iOS requires explicit approval from Apple. During development:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Configure entitlements and Info.plist as shown above"}),"\n",(0,r.jsx)(n.li,{children:"Test regular IAP flows without external purchase features"}),"\n",(0,r.jsx)(n.li,{children:"When ready for production, follow Apple's approval process for external purchase entitlements"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-android-developers",children:"For Android Developers"}),"\n",(0,r.jsx)(n.p,{children:"Alternative billing on Android requires:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Approval from Google Play Console for the alternative billing program"}),"\n",(0,r.jsx)(n.li,{children:"Backend integration to report tokens within 24 hours"}),"\n",(0,r.jsx)(n.li,{children:"Proper error handling for users not eligible for alternative billing"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"No Breaking Changes"}),": All changes are additive. Existing apps will continue to work without modifications."]}),"\n",(0,r.jsx)(n.h2,{id:"-documentation-updates",children:"\ud83d\udcd6 Documentation Updates"}),"\n",(0,r.jsx)(n.p,{children:"This release includes comprehensive documentation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/guides/alternative-billing",children:"Alternative Billing Guide"})})," - Complete guide for implementing alternative billing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/examples/alternative-billing",children:"Alternative Billing Example"})})," - Full code examples for both platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/core-methods#ios-specific-alternative-billing",children:"Core Methods - Alternative Billing APIs"})})," - API reference"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Specification"})})," - Official specification and terminology"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-references",children:"\ud83d\udd17 References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyodotdev/openiap",children:"OpenIAP Monorepo"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"StoreKit External Purchase"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/kmp-iap/blob/main/example/composeApp/src/commonMain/kotlin/dev/hyo/martie/screens/AlternativeBillingScreen.kt",children:"Example Implementation"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-acknowledgments",children:"\ud83d\ude4f Acknowledgments"}),"\n",(0,r.jsxs)(n.p,{children:["Special thanks to the ",(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP"})," project for providing the standardized specification that makes cross-platform IAP implementations possible."]}),"\n",(0,r.jsxs)(n.p,{children:["Questions or issues? Let us know via ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/kmp-iap/issues",children:"GitHub issues"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>t});var r=i(6540);const l={},o=r.createContext(l);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);