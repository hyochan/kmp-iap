"use strict";(self.webpackChunkkmp_iap_docs=self.webpackChunkkmp_iap_docs||[]).push([[3672],{5681:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var i=s(4848),r=s(8453);const c={title:"Core Methods",sidebar_position:3},t="Core Methods",o={id:"api/core-methods",title:"Core Methods",description:"Essential methods for implementing in-app purchases with kmp-iap, now 100% OpenIAP specification compliant. All methods support both iOS and Android platforms with unified APIs using Kotlin coroutines.",source:"@site/versioned_docs/version-1.0.0-beta/api/core-methods.md",sourceDirName:"api",slug:"/api/core-methods",permalink:"/kmp-iap/docs/1.0.0-beta/api/core-methods",draft:!1,unlisted:!1,editUrl:"https://github.com/hyochan/kmp-iap/tree/main/docs/versioned_docs/version-1.0.0-beta/api/core-methods.md",tags:[],version:"1.0.0-beta",sidebarPosition:3,frontMatter:{title:"Core Methods",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Types",permalink:"/kmp-iap/docs/1.0.0-beta/api/types"},next:{title:"Listeners",permalink:"/kmp-iap/docs/1.0.0-beta/api/listeners"}},l={},a=[{value:"Version Information",id:"version-information",level:2},{value:"Connection Management",id:"connection-management",level:2},{value:"initConnection()",id:"initconnection",level:3},{value:"endConnection()",id:"endconnection",level:3},{value:"Product Loading",id:"product-loading",level:2},{value:"requestProducts()",id:"requestproducts",level:3},{value:"v1.0.0-rc (Current)",id:"v100-rc-current",level:4},{value:"v1.0.0-beta",id:"v100-beta",level:4},{value:"Purchase Processing",id:"purchase-processing",level:2},{value:"requestPurchase()",id:"requestpurchase",level:3},{value:"v1.0.0-rc (Current)",id:"v100-rc-current-1",level:4},{value:"v1.0.0-beta",id:"v100-beta-1",level:4},{value:"Transaction Management",id:"transaction-management",level:2},{value:"finishTransaction()",id:"finishtransaction",level:3},{value:"Purchase History",id:"purchase-history",level:2},{value:"getAvailablePurchases()",id:"getavailablepurchases",level:3},{value:"getPurchaseHistories()",id:"getpurchasehistories",level:3},{value:"Event Flows",id:"event-flows",level:2},{value:"Purchase Event Flows",id:"purchase-event-flows",level:3},{value:"Platform-Specific Methods",id:"platform-specific-methods",level:2},{value:"iOS-Specific Methods",id:"ios-specific-methods",level:3},{value:"clearTransactionIOS()",id:"cleartransactionios",level:4},{value:"clearProductsIOS()",id:"clearproductsios",level:4},{value:"getPromotedProductIOS()",id:"getpromotedproductios",level:4},{value:"presentCodeRedemptionSheetIOS()",id:"presentcoderedemptionsheetios",level:4},{value:"getStorefrontIOS()",id:"getstorefrontios",level:4},{value:"Android-Specific Methods",id:"android-specific-methods",level:3},{value:"acknowledgePurchaseAndroid()",id:"acknowledgepurchaseandroid",level:4},{value:"consumePurchaseAndroid()",id:"consumepurchaseandroid",level:4},{value:"deepLinkToSubscriptions()",id:"deeplinktosubscriptions",level:4},{value:"Subscription Management",id:"subscription-management",level:2},{value:"getActiveSubscriptions()",id:"getactivesubscriptions",level:3},{value:"hasActiveSubscriptions()",id:"hasactivesubscriptions",level:3},{value:"Validation",id:"validation",level:2},{value:"validateReceipt()",id:"validatereceipt",level:3},{value:"isPurchaseValid()",id:"ispurchasevalid",level:3},{value:"Utility Methods",id:"utility-methods",level:2},{value:"getStore()",id:"getstore",level:3},{value:"canMakePayments()",id:"canmakepayments",level:3},{value:"getVersion()",id:"getversion",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"core-methods",children:"Core Methods"}),"\n",(0,i.jsxs)(n.p,{children:["Essential methods for implementing in-app purchases with kmp-iap, now ",(0,i.jsx)(n.strong,{children:"100% OpenIAP specification compliant"}),". All methods support both iOS and Android platforms with unified APIs using Kotlin coroutines."]}),"\n",(0,i.jsx)(n.h2,{id:"version-information",children:"Version Information"}),"\n",(0,i.jsxs)(n.admonition,{title:"Version Differences",type:"info",children:[(0,i.jsx)(n.p,{children:"This documentation covers both:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"v1.0.0-rc"})," (Current) - Simplified API without wrapper classes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"v1.0.0-beta"})," - Previous API with wrapper classes"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Platform Differences"}),": While the API is unified, there are important differences between iOS and Android implementations. Each method documents platform-specific behavior."]}),"\n",(0,i.jsx)(n.h2,{id:"connection-management",children:"Connection Management"}),"\n",(0,i.jsx)(n.h3,{id:"initconnection",children:"initConnection()"}),"\n",(0,i.jsx)(n.p,{children:"Initializes the connection to the platform store."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun initConnection(): Boolean\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"true"})," if connection successful, ",(0,i.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Establishes connection with the App Store (iOS) or Google Play Store (Android). Must be called before any other IAP operations."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Connects to StoreKit 2 (iOS 15+)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),": Connects to Google Play Billing Client v8+"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\nval connected = kmpIapInstance.initConnection()\nif (connected) {\n    println("IAP connection initialized successfully")\n} else {\n    println("Failed to initialize IAP connection")\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Throws"}),": ",(0,i.jsx)(n.code,{children:"PurchaseError"})," if connection fails"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"See Also"}),": ",(0,i.jsx)(n.a,{href:"#endconnection",children:"endConnection()"}),", ",(0,i.jsx)(n.a,{href:"/kmp-iap/docs/1.0.0-beta/guides/lifecycle",children:"Connection Lifecycle"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"endconnection",children:"endConnection()"}),"\n",(0,i.jsx)(n.p,{children:"Ends the connection to the platform store and cleans up resources."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun endConnection()\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Unit (void)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Cleanly closes the store connection and frees resources. Should be called when IAP functionality is no longer needed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"import io.github.hyochan.kmpiap.kmpIapInstance\n\n// In your cleanup code\noverride fun onCleared() {\n    scope.launch {\n        kmpIapInstance.endConnection()\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"product-loading",children:"Product Loading"}),"\n",(0,i.jsx)(n.h3,{id:"requestproducts",children:"requestProducts()"}),"\n",(0,i.jsx)(n.p,{children:"Loads product information from the store."}),"\n",(0,i.jsx)(n.h4,{id:"v100-rc-current",children:"v1.0.0-rc (Current)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun requestProducts(\n    skus: List<String>,\n    type: ProductType\n): List<Product>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"skus"})," - List of product SKUs to load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," - Product type (INAPP or SUBS)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of products with pricing and metadata"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\nimport io.github.hyochan.kmpiap.ProductType\n\n// Load in-app products\nval products = kmpIapInstance.requestProducts(\n    skus = listOf("coins_100", "coins_500", "remove_ads"),\n    type = ProductType.INAPP\n)\n\n// Load subscriptions\nval subscriptions = kmpIapInstance.requestProducts(\n    skus = listOf("premium_monthly", "premium_yearly"),\n    type = ProductType.SUBS\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"v100-beta",children:"v1.0.0-beta"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun requestProducts(params: ProductRequest): List<Product>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val products = kmpIapInstance.requestProducts(\n    ProductRequest(\n        skus = listOf("coins_100", "coins_500"),\n        type = ProductType.INAPP\n    )\n)\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Uses StoreKit 2 API for product requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),": Uses ",(0,i.jsx)(n.code,{children:"queryProductDetailsAsync()"})," with automatic product type detection"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"purchase-processing",children:"Purchase Processing"}),"\n",(0,i.jsx)(n.h3,{id:"requestpurchase",children:"requestPurchase()"}),"\n",(0,i.jsx)(n.p,{children:"Initiates a purchase using OpenIAP-compliant request structure."}),"\n",(0,i.jsx)(n.h4,{id:"v100-rc-current-1",children:"v1.0.0-rc (Current)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun requestPurchase(\n    sku: String,\n    ios: RequestPurchaseIosProps? = null,\n    android: RequestPurchaseAndroidProps? = null\n): Purchase\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sku"})," - Product SKU to purchase"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ios"})," - iOS-specific purchase options (optional)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"android"})," - Android-specific purchase options (optional)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Purchase object implementing ",(0,i.jsx)(n.code,{children:"PurchaseCommon"})," interface following OpenIAP specification"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\nimport io.github.hyochan.kmpiap.*\n\n// Simple purchase - just SKU\nval purchase = kmpIapInstance.requestPurchase(sku = "premium_upgrade")\n\n// With platform-specific options\nval purchase = kmpIapInstance.requestPurchase(\n    sku = "coins_100",\n    ios = RequestPurchaseIosProps(\n        sku = "coins_100",\n        quantity = 5,\n        appAccountToken = "token_456"\n    ),\n    android = RequestPurchaseAndroidProps(\n        skus = listOf("coins_100"),\n        obfuscatedAccountIdAndroid = "user_123",\n        obfuscatedProfileIdAndroid = "profile_456"\n    )\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"v100-beta-1",children:"v1.0.0-beta"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun requestPurchase(request: RequestPurchaseProps): Purchase\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val purchase = kmpIapInstance.requestPurchase(\n    RequestPurchaseProps(\n        ios = RequestPurchaseIosProps(\n            sku = "premium_upgrade",\n            quantity = 1\n        ),\n        android = RequestPurchaseAndroidProps(\n            skus = listOf("premium_upgrade")\n        )\n    )\n)\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Supports App Account Token for fraud prevention"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),": Supports obfuscated user IDs and automatic Activity detection"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"transaction-management",children:"Transaction Management"}),"\n",(0,i.jsx)(n.h3,{id:"finishtransaction",children:"finishTransaction()"}),"\n",(0,i.jsx)(n.p,{children:"Completes a transaction after successful purchase processing."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun finishTransaction(\n    purchase: Purchase,\n    isConsumable: Boolean? = null\n): Boolean\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchase"})," - The purchase to finish"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isConsumable"})," - Whether the product is consumable (null for auto-detection)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"true"})," if transaction was successfully finished, ",(0,i.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\n// For consumable products\nval success = kmpIapInstance.finishTransaction(purchase, isConsumable = true)\nif (success) {\n    println("Transaction finished successfully")\n}\n\n// For subscriptions (acknowledge only, don\'t consume)\nval acknowledged = kmpIapInstance.finishTransaction(purchase, isConsumable = false)\nif (acknowledged) {\n    println("Subscription acknowledged")\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Behavior"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Calls ",(0,i.jsx)(n.code,{children:"finish()"})," on the transaction"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Consumables: Calls ",(0,i.jsx)(n.code,{children:"consumeAsync"})]}),"\n",(0,i.jsxs)(n.li,{children:["Non-consumables/Subscriptions: Calls ",(0,i.jsx)(n.code,{children:"acknowledgePurchase"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Important"}),": Subscriptions should NEVER be consumed. They should only be acknowledged once."]}),"\n",(0,i.jsx)(n.h2,{id:"purchase-history",children:"Purchase History"}),"\n",(0,i.jsx)(n.h3,{id:"getavailablepurchases",children:"getAvailablePurchases()"}),"\n",(0,i.jsx)(n.p,{children:"Gets all available (unconsumed/active) purchases."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun getAvailablePurchases(options: PurchaseOptions? = null): List<Purchase>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of available purchases"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\nval purchases = kmpIapInstance.getAvailablePurchases()\npurchases.forEach { purchase ->\n    println("Product: \\${purchase.productId}")\n    println("Date: \\${purchase.transactionDate}")\n    \n    // Check acknowledgment status (Android)\n    if (purchase.acknowledgedAndroid == true) {\n        println("Already acknowledged")\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Returns active subscriptions and non-consumed purchases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),": Queries both INAPP and SUBS purchases separately"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getpurchasehistories",children:"getPurchaseHistories()"}),"\n",(0,i.jsx)(n.p,{children:"Gets purchase history including consumed items."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun getPurchaseHistories(options: PurchaseOptions? = null): List<ProductPurchase>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of historical purchases"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Android Billing Client v6+ no longer provides purchase history. This method returns an empty list on Android."]}),"\n",(0,i.jsx)(n.h2,{id:"event-flows",children:"Event Flows"}),"\n",(0,i.jsx)(n.h3,{id:"purchase-event-flows",children:"Purchase Event Flows"}),"\n",(0,i.jsx)(n.p,{children:"All purchase events are exposed via Kotlin Flow for reactive programming:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"// Purchase updates\nval purchaseUpdatedListener: Flow<Purchase>\n\n// Purchase errors\nval purchaseErrorListener: Flow<PurchaseError>\n\n// Promoted products (iOS only)\nval promotedProductListener: Flow<String?>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example Usage"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\nimport kotlinx.coroutines.flow.collectLatest\n\n// Listen for purchase updates\nscope.launch {\n    kmpIapInstance.purchaseUpdatedListener.collectLatest { purchase ->\n        println("Purchase completed: \\${purchase.productId}")\n        // Deliver content to user\n        deliverContent(purchase.productId)\n        // Finish transaction\n        kmpIapInstance.finishTransaction(purchase, isConsumable = true)\n    }\n}\n\n// Listen for errors\nscope.launch {\n    kmpIapInstance.purchaseErrorListener.collectLatest { error ->\n        when (error.code) {\n            ErrorCode.E_USER_CANCELLED.name -> {\n                println("User cancelled purchase")\n            }\n            else -> {\n                println("Purchase error: \\${error.message}")\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"platform-specific-methods",children:"Platform-Specific Methods"}),"\n",(0,i.jsx)(n.h3,{id:"ios-specific-methods",children:"iOS-Specific Methods"}),"\n",(0,i.jsx)(n.h4,{id:"cleartransactionios",children:"clearTransactionIOS()"}),"\n",(0,i.jsx)(n.p,{children:"Clears pending transactions (iOS only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun clearTransactionIOS()\n"})}),"\n",(0,i.jsx)(n.h4,{id:"clearproductsios",children:"clearProductsIOS()"}),"\n",(0,i.jsx)(n.p,{children:"Clears cached products (iOS only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun clearProductsIOS()\n"})}),"\n",(0,i.jsx)(n.h4,{id:"getpromotedproductios",children:"getPromotedProductIOS()"}),"\n",(0,i.jsx)(n.p,{children:"Gets the currently promoted product (iOS only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun getPromotedProductIOS(): String?\n"})}),"\n",(0,i.jsx)(n.h4,{id:"presentcoderedemptionsheetios",children:"presentCodeRedemptionSheetIOS()"}),"\n",(0,i.jsx)(n.p,{children:"Presents the App Store code redemption sheet."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun presentCodeRedemptionSheetIOS()\n"})}),"\n",(0,i.jsx)(n.h4,{id:"getstorefrontios",children:"getStorefrontIOS()"}),"\n",(0,i.jsx)(n.p,{children:"Gets the App Store storefront information."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun getStorefrontIOS(): String\n"})}),"\n",(0,i.jsx)(n.h3,{id:"android-specific-methods",children:"Android-Specific Methods"}),"\n",(0,i.jsx)(n.h4,{id:"acknowledgepurchaseandroid",children:"acknowledgePurchaseAndroid()"}),"\n",(0,i.jsx)(n.p,{children:"Acknowledges a purchase (Android only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun acknowledgePurchaseAndroid(purchaseToken: String)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Important"}),": Subscriptions must be acknowledged within 3 days or they will be refunded."]}),"\n",(0,i.jsx)(n.h4,{id:"consumepurchaseandroid",children:"consumePurchaseAndroid()"}),"\n",(0,i.jsx)(n.p,{children:"Consumes a purchase (Android only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun consumePurchaseAndroid(purchaseToken: String)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Warning"}),": Only use for consumable products. Never consume subscriptions."]}),"\n",(0,i.jsx)(n.h4,{id:"deeplinktosubscriptions",children:"deepLinkToSubscriptions()"}),"\n",(0,i.jsx)(n.p,{children:"Opens the Google Play subscription management page."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun deepLinkToSubscriptions(options: DeepLinkOptions)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\nkmpIapInstance.deepLinkToSubscriptions(\n    DeepLinkOptions(skuAndroid = "premium_monthly")\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"subscription-management",children:"Subscription Management"}),"\n",(0,i.jsx)(n.h3,{id:"getactivesubscriptions",children:"getActiveSubscriptions()"}),"\n",(0,i.jsx)(n.p,{children:"Gets all active subscriptions with detailed information."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun getActiveSubscriptions(subscriptionIds: List<String>? = null): List<ActiveSubscription>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subscriptionIds"})," - Optional list of subscription IDs to check. If null, returns all active subscriptions"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of active subscriptions with platform-specific details"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\n// Get all active subscriptions\nval allActiveSubscriptions = kmpIapInstance.getActiveSubscriptions()\n\n// Get specific subscriptions\nval premiumSubscriptions = kmpIapInstance.getActiveSubscriptions(\n    listOf("premium_monthly", "premium_yearly")\n)\n\npremiumSubscriptions.forEach { subscription ->\n    println("Product: \\${subscription.productId}")\n    println("Active: \\${subscription.isActive}")\n    \n    // iOS-specific information\n    subscription.expirationDateIOS?.let { expDate ->\n        println("Expires: \\${Instant.fromEpochMilliseconds(expDate)}")\n    }\n    subscription.environmentIOS?.let { env ->\n        println("Environment: $env") // "Sandbox" or "Production"\n    }\n    subscription.daysUntilExpirationIOS?.let { days ->\n        println("Days until expiration: $days")\n    }\n    \n    // Android-specific information\n    subscription.autoRenewingAndroid?.let { autoRenew ->\n        println("Auto-renewing: $autoRenew")\n    }\n    \n    // Cross-platform\n    if (subscription.willExpireSoon == true) {\n        println("\u26a0\ufe0f Subscription expires soon!")\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"iOS"}),": Provides ",(0,i.jsx)(n.code,{children:"expirationDateIOS"}),", ",(0,i.jsx)(n.code,{children:"environmentIOS"}),", ",(0,i.jsx)(n.code,{children:"daysUntilExpirationIOS"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android"}),": Provides ",(0,i.jsx)(n.code,{children:"autoRenewingAndroid"})," status"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-platform"}),": ",(0,i.jsx)(n.code,{children:"willExpireSoon"})," (true if expiring within 7 days)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"hasactivesubscriptions",children:"hasActiveSubscriptions()"}),"\n",(0,i.jsx)(n.p,{children:"Checks if the user has any active subscriptions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun hasActiveSubscriptions(subscriptionIds: List<String>? = null): Boolean\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subscriptionIds"})," - Optional list of subscription IDs to check. If null, checks all subscriptions"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"true"})," if the user has at least one active subscription, ",(0,i.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.kmpIapInstance\n\n// Check if user has any active subscriptions\nval hasAnySubscription = kmpIapInstance.hasActiveSubscriptions()\nif (hasAnySubscription) {\n    println("User has active subscriptions")\n    showPremiumFeatures()\n} else {\n    showSubscriptionOffer()\n}\n\n// Check specific subscription types\nval hasPremium = kmpIapInstance.hasActiveSubscriptions(\n    listOf("premium_monthly", "premium_yearly")\n)\nif (hasPremium) {\n    enablePremiumFeatures()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Feature gating based on subscription status"}),"\n",(0,i.jsx)(n.li,{children:"Showing/hiding subscription offers"}),"\n",(0,i.jsx)(n.li,{children:"Quick subscription status checks without detailed information"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,i.jsx)(n.h3,{id:"validatereceipt",children:"validateReceipt()"}),"\n",(0,i.jsx)(n.p,{children:"Validates a purchase receipt (server-side validation recommended)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun validateReceipt(options: ValidationOptions): ValidationResult\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"options"})," - Validation options including receipt data"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Validation result with status"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Client-side validation is not secure. Always validate receipts on your server."]}),"\n",(0,i.jsx)(n.h3,{id:"ispurchasevalid",children:"isPurchaseValid()"}),"\n",(0,i.jsx)(n.p,{children:"Quick client-side purchase validation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun isPurchaseValid(purchase: Purchase): Boolean\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"true"})," if purchase appears valid"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"import io.github.hyochan.kmpiap.kmpIapInstance\n\nval isValid = kmpIapInstance.isPurchaseValid(purchase)\nif (isValid) {\n    // Proceed with server validation\n    validateOnServer(purchase)\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,i.jsx)(n.h3,{id:"getstore",children:"getStore()"}),"\n",(0,i.jsx)(n.p,{children:"Gets the current store type."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"fun getStore(): Store\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Store enum (APP_STORE, PLAY_STORE, AMAZON, or NONE)"]}),"\n",(0,i.jsx)(n.h3,{id:"canmakepayments",children:"canMakePayments()"}),"\n",(0,i.jsx)(n.p,{children:"Checks if the device can make payments."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"suspend fun canMakePayments(): Boolean\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"true"})," if payments are available"]}),"\n",(0,i.jsx)(n.h3,{id:"getversion",children:"getVersion()"}),"\n",(0,i.jsx)(n.p,{children:"Gets the library version."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"fun getVersion(): String\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),': Version string (e.g., "KMP-IAP v1.0.0 (Android)")']}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Always handle errors"}),": Use try-catch blocks or collect error flows"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Finish transactions"}),": Always call ",(0,i.jsx)(n.code,{children:"finishTransaction()"})," after delivering content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check acknowledgment"}),": For Android, check if subscriptions are already acknowledged before re-acknowledging"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor connection"}),": Check connection status before operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use proper product types"}),": Specify ProductType.INAPP or ProductType.SUBS correctly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Never consume subscriptions"}),": Only acknowledge subscriptions, never consume them"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validate on server"}),": Always perform receipt validation on your server"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(n.p,{children:["All methods can throw ",(0,i.jsx)(n.code,{children:"PurchaseError"})," with specific error codes:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"import io.github.hyochan.kmpiap.kmpIapInstance\n\ntry {\n    val purchase = kmpIapInstance.requestPurchase(request)\n} catch (e: PurchaseError) {\n    when (e.code) {\n        ErrorCode.E_USER_CANCELLED.name -> handleCancellation()\n        ErrorCode.E_ITEM_UNAVAILABLE.name -> handleUnavailable()\n        ErrorCode.E_NETWORK_ERROR.name -> handleNetworkError()\n        else -> handleGenericError(e)\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/kmp-iap/docs/1.0.0-beta/api/types",children:"Types"})," - Type definitions used in methods"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/kmp-iap/docs/1.0.0-beta/api/error-codes",children:"Error Codes"})," - Complete error code reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/kmp-iap/docs/1.0.0-beta/api/listeners",children:"Events and Listeners"})," - Using Flow for events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/kmp-iap/docs/1.0.0-beta/examples/basic-store",children:"Examples"})," - Complete implementation examples"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const r={},c=i.createContext(r);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);