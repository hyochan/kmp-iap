"use strict";(self.webpackChunkkmp_iap_docs=self.webpackChunkkmp_iap_docs||[]).push([[4650],{571:(e,n,t)=>{t.d(n,{A:()=>o});var r=t(6540),s=t(4848);function i({className:e="adfit",style:n,unit:t,height:i,width:o}){return(0,r.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const r=n.querySelectorAll(".kakao_ad_area"),s=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');r.forEach(e=>e.remove()),s.forEach(e=>e.remove());const a=document.createElement("ins"),c=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",i.toString()),a.setAttribute("data-ad-unit",t),n.appendChild(a),n.appendChild(c)},100);return()=>clearTimeout(n)},[e,t,i,o]),(0,s.jsx)("div",{style:n,children:(0,s.jsx)("div",{className:e})})}function o(){return(0,s.jsx)(i,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,style:{marginBottom:20,display:"flex",justifyContent:"center"}})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},9888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(4848),s=t(8453),i=t(571);const o={title:"iOS Setup",sidebar_label:"iOS Setup",sidebar_position:2},a="iOS Setup",c={id:"getting-started/ios-setup",title:"iOS Setup",description:"For complete iOS setup instructions including App Store Connect configuration, Xcode setup, and testing guidelines, please visit:",source:"@site/versioned_docs/version-1.0.0-beta/getting-started/ios-setup.md",sourceDirName:"getting-started",slug:"/getting-started/ios-setup",permalink:"/kmp-iap/docs/1.0.0-beta/getting-started/ios-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/hyochan/kmp-iap/tree/main/docs/versioned_docs/version-1.0.0-beta/getting-started/ios-setup.md",tags:[],version:"1.0.0-beta",sidebarPosition:2,frontMatter:{title:"iOS Setup",sidebar_label:"iOS Setup",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/kmp-iap/docs/1.0.0-beta/getting-started/installation"},next:{title:"Android Setup",permalink:"/kmp-iap/docs/1.0.0-beta/getting-started/android-setup"}},d={},p=[{value:"Code Implementation",id:"code-implementation",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"iOS-specific Features",id:"ios-specific-features",level:3},{value:"StoreKit 2 Support",id:"storekit-2-support",level:3},{value:"Subscription Offers",id:"subscription-offers",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ios-setup",children:"iOS Setup"}),"\n",(0,r.jsx)(i.A,{}),"\n",(0,r.jsx)(n.p,{children:"For complete iOS setup instructions including App Store Connect configuration, Xcode setup, and testing guidelines, please visit:"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://openiap.dev/docs/ios-setup",children:"iOS Setup Guide - openiap.dev"})})]}),"\n",(0,r.jsx)(n.p,{children:"The guide covers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"App Store Connect configuration"}),"\n",(0,r.jsx)(n.li,{children:"Xcode project setup"}),"\n",(0,r.jsx)(n.li,{children:"Sandbox testing"}),"\n",(0,r.jsx)(n.li,{children:"Common troubleshooting steps"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'import io.github.hyochan.kmpiap.KmpIAP\nimport io.github.hyochan.kmpiap.types.*\nimport kotlinx.coroutines.*\n\nclass IAPManager {\n    private val kmpIAP = KmpIAP()\n    private val scope = CoroutineScope(Dispatchers.Main)\n    \n    fun initialize() {\n        scope.launch {\n            try {\n                // Initialize connection\n                kmpIAP.initConnection()\n                println("StoreKit connected")\n                \n                // Set up purchase listeners\n                setupPurchaseListeners()\n                \n                // Load products\n                loadProducts()\n            } catch (e: Exception) {\n                println("Failed to initialize: ${e.message}")\n            }\n        }\n    }\n    \n    private fun setupPurchaseListeners() {\n        scope.launch {\n            // Listen for purchase updates\n            kmpIAP.purchaseUpdatedListener.collect { purchase ->\n                handlePurchaseUpdate(purchase)\n            }\n        }\n        \n        scope.launch {\n            // Listen for purchase errors\n            kmpIAP.purchaseErrorListener.collect { error ->\n                handlePurchaseError(error)\n            }\n        }\n        \n        scope.launch {\n            // Listen for promoted products (iOS only)\n            kmpIAP.promotedProductListener.collect { productId ->\n                productId?.let {\n                    // Handle promoted product\n                    handlePromotedProduct(it)\n                }\n            }\n        }\n    }\n    \n    private suspend fun loadProducts() {\n        try {\n            val products = kmpIAP.requestProducts(\n                ProductRequest(\n                    skus = listOf("premium_upgrade", "remove_ads"),\n                    type = ProductType.INAPP\n                )\n            )\n            println("Found ${products.size} products")\n        } catch (e: Exception) {\n            println("Failed to load products: ${e.message}")\n        }\n    }\n    \n    private suspend fun handlePurchaseUpdate(purchase: Purchase) {\n        // Verify purchase with your backend\n        val isValid = verifyPurchaseWithBackend(purchase)\n        \n        if (isValid) {\n            // Grant entitlement\n            grantEntitlement(purchase.productId)\n            \n            // Finish transaction\n            kmpIAP.finishTransaction(\n                purchase = purchase,\n                isConsumable = isConsumableProduct(purchase.productId)\n            )\n        }\n    }\n    \n    private fun handlePurchaseError(error: PurchaseError) {\n        when (error.code) {\n            ErrorCode.USER_CANCELLED -> {\n                // User cancelled, no action needed\n            }\n            ErrorCode.PRODUCT_ALREADY_OWNED -> {\n                // Item already owned, restore it\n                restorePurchases()\n            }\n            else -> {\n                // Show error to user\n                showError(error.message)\n            }\n        }\n    }\n    \n    private suspend fun handlePromotedProduct(productId: String) {\n        // Handle App Store promoted product\n        println("Promoted product: $productId")\n        // Optionally purchase the promoted product\n        kmpIAP.buyPromotedProductIOS()\n    }\n    \n    suspend fun purchaseProduct(productId: String) {\n        kmpIAP.requestPurchase(\n            UnifiedPurchaseRequest(\n                sku = productId,\n                quantity = 1\n            )\n        )\n    }\n    \n    suspend fun restorePurchases() {\n        val purchases = kmpIAP.getAvailablePurchases()\n        purchases.forEach { purchase ->\n            grantEntitlement(purchase.productId)\n        }\n    }\n    \n    private suspend fun verifyPurchaseWithBackend(purchase: Purchase): Boolean {\n        // TODO: Implement your backend verification\n        return true\n    }\n    \n    private fun grantEntitlement(productId: String) {\n        // Grant the appropriate entitlement based on productId\n        when (productId) {\n            "remove_ads" -> UserSettings.adsRemoved = true\n            "premium_upgrade" -> UserSettings.isPremium = true\n            // Handle other products\n        }\n    }\n    \n    private fun isConsumableProduct(productId: String): Boolean {\n        return when (productId) {\n            "coins_100", "coins_500" -> true\n            else -> false\n        }\n    }\n    \n    private fun showError(message: String) {\n        // Show error message to user\n    }\n    \n    fun cleanup() {\n        scope.cancel()\n        runBlocking {\n            kmpIAP.endConnection()\n        }\n    }\n}\n\n// Simple user settings example\nobject UserSettings {\n    var adsRemoved: Boolean = false\n    var isPremium: Boolean = false\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"ios-specific-features",children:"iOS-specific Features"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// Get current storefront (iOS only)\nval storefront = kmpIAP.getStorefrontIOS()\nprintln("Current storefront: $storefront") // e.g., "US", "GB", "JP"\n\n// Present code redemption sheet (iOS only)\nkmpIAP.presentCodeRedemptionSheetIOS()\n\n// Handle promoted products\nscope.launch {\n    kmpIAP.promotedProductListener.collect { productId ->\n        productId?.let {\n            println("Promoted product: $it")\n            // Purchase the promoted product\n            kmpIAP.buyPromotedProductIOS()\n        }\n    }\n}\n\n// Clear pending transactions (iOS only)\nkmpIAP.clearTransactionIOS()\n\n// Clear products cache (iOS only)\nkmpIAP.clearProductsIOS()\n\n// Finish specific transaction by ID\nkmpIAP.finishTransactionIOS(transactionId)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"storekit-2-support",children:"StoreKit 2 Support"}),"\n",(0,r.jsx)(n.p,{children:"The library automatically uses StoreKit 2 on iOS 15.0+ with fallback to StoreKit 1:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// StoreKit 2 features are used automatically when available\n// The same API works for both StoreKit 1 and 2\n\n// Validate receipt (uses StoreKit 2 verification when available)\nval validationResult = kmpIAP.validateReceipt(\n    ValidationOptions(\n        receiptData = purchase.transactionReceipt,\n        isTest = false\n    )\n)\n\n// Check if purchase is valid\nval isValid = kmpIAP.isPurchaseValid(purchase)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"subscription-offers",children:"Subscription Offers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'// Handle subscription with promotional offers\nkmpIAP.requestPurchase(\n    UnifiedPurchaseRequest(\n        sku = "monthly_subscription",\n        quantity = 1,\n        promotionalOffer = PromotionalOffer(\n            identifier = "offer_id",\n            keyIdentifier = "key_id",\n            nonce = "nonce_value",\n            signature = "signature",\n            timestamp = System.currentTimeMillis()\n        )\n    )\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'scope.launch {\n    kmpIAP.purchaseErrorListener.collect { error ->\n        when (error.code) {\n            ErrorCode.E_NETWORK.name -> {\n                // Network error\n                showDialog("Please check your internet connection")\n            }\n            ErrorCode.E_PAYMENT_CANCELLED.name -> {\n                // Payment cancelled by user\n                println("Purchase cancelled")\n            }\n            ErrorCode.E_PAYMENT_INVALID.name -> {\n                // Invalid payment\n                showDialog("Payment could not be processed")\n            }\n            ErrorCode.E_PERMISSION_DENIED.name -> {\n                // Permission denied\n                showDialog("In-app purchases are not allowed")\n            }\n            else -> {\n                showDialog("Purchase failed: ${error.message}")\n            }\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/getting-started/android-setup",children:"Android Setup"})})," - Configure for Android platform"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/guides/purchases",children:"Basic Implementation"})})," - Start implementing purchases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/guides/troubleshooting",children:"Troubleshooting"})})," - Common issues and solutions"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["For detailed platform configuration, product setup, and testing instructions, visit the ",(0,r.jsx)(n.a,{href:"https://openiap.dev/docs/ios-setup",children:"iOS Setup Guide at openiap.dev"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);