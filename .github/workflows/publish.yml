name: Publish to Maven Central

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.0.0)"
        required: true
        type: string

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:+UseParallelGC"

permissions:
  contents: write

jobs:
  publish:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "libraryVersion=$VERSION" >> local.properties

      - name: Regenerate podspec with correct version
        run: |
          ./gradlew :library:podspec

      - name: Update podspec to read openiap-versions.json dynamically
        run: |
          ./gradlew :library:updatePodspecDependency

      - name: Update README version
        run: |
          ./gradlew :library:updateReadmeVersion

      - name: Commit version updates
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md library/library.podspec
          git diff --staged --quiet || git commit -m "chore: update version to ${{ env.VERSION }} [skip ci]"
          git push || echo "No changes to commit"

      - name: Build and test
        run: |
          ./gradlew :library:build
          ./gradlew :library:allTests

      - name: Clean build artifacts
        run: |
          rm -rf library/build/cocoapods

      - name: Build iOS frameworks
        run: |
          ./gradlew :library:podGenIos
          ./gradlew :library:updatePodspecDependency
          ./gradlew :library:podInstallSyntheticIos
          ./gradlew :library:podBuildOpeniapIos
          ./gradlew :library:linkPodDebugFrameworkIosSimulatorArm64
          ./gradlew :library:linkPodDebugFrameworkIosArm64

      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew :library:publishAllPublicationsToMavenCentral --no-daemon --no-parallel

      - name: Create GitHub Release (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release artifacts
        if: github.event_name == 'workflow_dispatch'
        run: |
          mkdir -p release-artifacts
          cp library/build/outputs/aar/*.aar release-artifacts/
          cp library/build/libs/*.jar release-artifacts/ || true
          zip -r release-artifacts.zip release-artifacts/

      - name: Upload release artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-artifacts.zip
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
